{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "sinkdir"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     parameter1 as string",
				"}",
				"source(output(",
				"          visit_id as string,",
				"          visit_start_date as string,",
				"          visit_end_date as string,",
				"          visit_cost as string,",
				"          procedure_code as string,",
				"          procedure_desc as string,",
				"          hospital_id as string,",
				"          hospital as string,",
				"          owner_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          address as string,",
				"          city as string,",
				"          postcode as string,",
				"          pet_id as string,",
				"          pet_name as string,",
				"          species as string,",
				"          breed as string,",
				"          pet_dob as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          visit_id as string,",
				"          visit_start_date as string,",
				"          visit_end_date as string,",
				"          visit_cost as string,",
				"          procedure_code as string,",
				"          procedure_desc as string,",
				"          hospital_id as string,",
				"          hospital as string,",
				"          owner_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          address as string,",
				"          city as string,",
				"          postcode as string,",
				"          pet_id as string,",
				"          pet_name as string,",
				"          species as string,",
				"          breed as string,",
				"          pet_dob as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 join(source1@visit_id == source2@visit_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(folder = $parameter1) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          visit_id as string,",
				"          visit_start_date as string,",
				"          visit_end_date as string,",
				"          visit_cost as string,",
				"          procedure_code as string,",
				"          procedure_desc as string,",
				"          hospital_id as string,",
				"          hospital as string,",
				"          owner_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          address as string,",
				"          city as string,",
				"          postcode as string,",
				"          pet_id as string,",
				"          pet_name as string,",
				"          species as string,",
				"          breed as string,",
				"          pet_dob as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkdir"
			]
		}
	}
}